# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.0-node-browsers
         environment:
            PGHOST: localhost
            PGUSER: root
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:10.3-alpine-postgis
         environment:
            POSTGRES_USER: root
            POSTGRES_DB: nb_integration_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
      # Database setup
      - run:
          command: bundle exec rake db:test:migrate
          environment:
            DATABASE_URL: "postgres://localhost:5432/nb_integration_test"

      # run tests!
      # we exclude integration specs as long as we only have one container
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    docker:
       - image: circleci/ruby:2.5.0-node-browsers


    working_directory: ~/repo

    steps:
      - checkout

      - add_ssh_keys:  # add key from CircleCI account based on fingerprint
          fingerprints:
            - "32:72:ca:a8:43:5a:d1:1c:f5:9d:01:5c:ad:0a:e9:ee"

      - run:
          name: Add Heroku to known_hosts
          command: ssh-keyscan -H heroku.com >> ~/.ssh/known_hosts

      - run:
          name: Run Heroku Setup Script
          command: bash .circleci/setup-heroku.sh

      - run:
          name: Deploy Master to Heroku
          environment:
            HEROKU_APP_NAME: polar-temple-72955
          command: |  # this command is framework-dependent and may vary
            heroku git:remote --ssh-git -a $HEROKU_APP_NAME
            git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:  # only deploy when master successfully builds
          requires:
            - build
          filters:
            branches:
              only: master
